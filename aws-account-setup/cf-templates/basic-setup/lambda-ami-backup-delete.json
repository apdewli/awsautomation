{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Lambda's for AMI backup and delete for OneShield",
	"Parameters": {
		"Bucketname": {
			"Description": "Enter the bucket name where AMI backup/delete Lambda codes are placed",
			"Type": "String",
			"Default": ""
			},
		"S3Path": {
			"Description": "Enter the path in the S3 bucket where AMI backup/delete Lambda codes are placed",
			"Type": "String",
			"Default": "lambda-code"
			}
		},
	"Resources": {
		"LambdaAMIBackupDeleteRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
				"RoleName": "LambdaAMIBackupDeleteRole",
                "AssumeRolePolicyDocument" : {
                    "Version" : "2012-10-17",
                    "Statement" : [
                        {
                            "Effect" : "Allow",
                            "Principal" : {
                                "Service" : [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action"    : [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies"                 : [
                    {
                        "PolicyName" : "LambdaGetLatestWindowsAmiIdPolicy",
                        "PolicyDocument" : {
                            "Version" : "2012-10-17",
                            "Statement": [
						{
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": [
                "ec2:DescribeInstances",
                "ec2:GetEbsEncryptionByDefault",
                "ec2:DescribeSnapshots",
                "ec2:DescribeLocalGatewayVirtualInterfaces",
                "ec2:DescribeHostReservationOfferings",
                "ec2:DescribeTrafficMirrorSessions",
                "ses:SendEmail",
                "ec2:DescribeExportImageTasks",
                "ec2:DescribeTrafficMirrorFilters",
                "ec2:DescribeVolumeStatus",
                "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
                "ec2:DescribeScheduledInstanceAvailability",
                "ec2:DescribeVolumes",
                "ec2:GetEbsDefaultKmsKeyId",
                "ec2:DescribeFpgaImageAttribute",
                "ec2:DescribeExportTasks",
                "ec2:DescribeTransitGatewayMulticastDomains",
                "ec2:DescribeKeyPairs",
                "ec2:DescribeReservedInstancesListings",
                "ec2:DescribeCapacityReservations",
                "ec2:DescribeClientVpnRoutes",
                "ec2:DescribeSpotFleetRequestHistory",
                "ec2:DescribeVpcClassicLinkDnsSupport",
                "ec2:DescribeSnapshotAttribute",
                "ec2:DescribeIdFormat",
                "ec2:DescribeFastSnapshotRestores",
                "ec2:DescribeVolumeAttribute",
                "ec2:DescribeImportSnapshotTasks",
                "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
                "ec2:GetPasswordData",
                "ec2:DescribeVpcEndpointServicePermissions",
                "ec2:DescribeTransitGatewayAttachments",
                "ec2:DescribeScheduledInstances",
                "ec2:SearchLocalGatewayRoutes",
                "ec2:DescribeImageAttribute",
                "ec2:DescribeFleets",
                "ec2:DescribeReservedInstancesModifications",
                "ec2:DescribeSubnets",
                "ec2:DescribeMovingAddresses",
                "ec2:DescribeFleetHistory",
                "ec2:DescribePrincipalIdFormat",
                "ec2:DescribeFlowLogs",
                "ec2:DescribeRegions",
                "ec2:DescribeTransitGateways",
                "ec2:DescribeVpcEndpointServices",
                "ec2:DescribeSpotInstanceRequests",
                "ec2:DescribeVpcAttribute",
                "ec2:ExportClientVpnClientCertificateRevocationList",
                "ec2:DescribeTrafficMirrorTargets",
                "ec2:DescribeTransitGatewayRouteTables",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeNetworkInterfaceAttribute",
                "ec2:DescribeLocalGatewayRouteTables",
                "ec2:DescribeVpcEndpointConnections",
                "ec2:SearchTransitGatewayMulticastGroups",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeHostReservations",
                "ec2:DescribeBundleTasks",
                "ec2:DescribeIdentityIdFormat",
                "ec2:DescribeClassicLinkInstances",
                "ec2:DescribeVpcEndpointConnectionNotifications",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeFpgaImages",
                "ec2:DescribeVpcs",
                "ec2:DescribeStaleSecurityGroups",
                "ec2:DescribeAggregateIdFormat",
                "ec2:ExportClientVpnClientConfiguration",
                "ec2:DescribeVolumesModifications",
                "ec2:CreateImage",
                "ec2:GetHostReservationPurchasePreview",
                "ec2:DescribeClientVpnConnections",
                "ec2:DescribeByoipCidrs",
                "ec2:GetConsoleScreenshot",
                "ec2:DescribePlacementGroups",
                "ec2:DescribeInternetGateways",
                "logs:CreateLogStream",
                "ec2:SearchTransitGatewayRoutes",
                "ec2:GetLaunchTemplateData",
                "ec2:DescribeSpotDatafeedSubscription",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeNetworkInterfacePermissions",
                "ec2:DescribeReservedInstances",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeRouteTables",
                "ec2:DescribeClientVpnEndpoints",
                "ec2:DescribeEgressOnlyInternetGateways",
                "ec2:DescribeLaunchTemplates",
                "ec2:DescribeVpnConnections",
                "ec2:DescribeVpcPeeringConnections",
                "ec2:DescribeReservedInstancesOfferings",
                "ec2:GetTransitGatewayAttachmentPropagations",
                "ec2:DescribeFleetInstances",
                "ec2:DescribeClientVpnTargetNetworks",
                "ec2:DescribeVpcEndpointServiceConfigurations",
                "ec2:DescribePrefixLists",
                "ec2:GetReservedInstancesExchangeQuote",
                "ec2:DescribeInstanceCreditSpecifications",
                "ec2:DescribeVpcClassicLink",
                "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
                "ec2:GetTransitGatewayRouteTablePropagations",
                "ec2:DescribeInstanceTypes",
                "ec2:DescribeVpcEndpoints",
                "ec2:DescribeElasticGpus",
                "ec2:DescribeVpnGateways",
                "ec2:DescribeTransitGatewayPeeringAttachments",
                "ec2:DeregisterImage",
                "ec2:GetDefaultCreditSpecification",
                "ec2:DeleteSnapshot",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstanceAttribute",
                "ec2:GetCapacityReservationUsage",
                "ec2:DescribeDhcpOptions",
                "ec2:GetConsoleOutput",
                "ec2:DescribeSpotPriceHistory",
                "ec2:DescribeNetworkInterfaces",
                "ec2:GetTransitGatewayRouteTableAssociations",
                "ec2:DescribeIamInstanceProfileAssociations",
                "ec2:DescribeTags",
                "ec2:DescribeLaunchTemplateVersions",
                "ec2:DescribeImportImageTasks",
                "ec2:DescribeNatGateways",
                "ec2:DescribeCustomerGateways",
                "ec2:DescribeLocalGateways",
                "logs:PutLogEvents",
                "ec2:DescribeSpotFleetRequests",
                "ec2:DescribeHosts",
                "ec2:DescribeImages",
                "ec2:DescribeSpotFleetInstances",
                "ec2:DescribeSecurityGroupReferences",
                "ec2:DescribePublicIpv4Pools",
                "ec2:DescribeClientVpnAuthorizationRules",
                "ec2:DescribeTransitGatewayVpcAttachments",
                "ec2:GetTransitGatewayMulticastDomainAssociations",
                "ec2:DescribeConversionTasks"
            ],
            "Resource": "*"
        },
        {
            "Sid": "VisualEditor1",
            "Effect": "Allow",
            "Action": "logs:CreateLogGroup",
            "Resource": [ "*" ]
        }
    ]
                                }
							}
                        ]
                    }
                },
		"ScheduledRuleAMIBackup": {
			"Type": "AWS::Events::Rule",
			"Properties": {
				"Description": "ScheduledRule",
				"ScheduleExpression": "rate(1 hour)",
				"State": "ENABLED",
				"Targets": [{
					"Arn": { "Fn::GetAtt": ["AMIBackupLambda", "Arn"] },
							"Id"  : "TargetFunctionV1"
						}]
					}
				},
		"ScheduledRuleAMIDelete": {
			"Type": "AWS::Events::Rule",
			"Properties": {
				"Description": "ScheduledRule",
				"ScheduleExpression": "rate(1 hour)",
				"State": "ENABLED",
				"Targets": [{
					"Arn": { "Fn::GetAtt": ["AMIDeleteLambda", "Arn"] },
							"Id"  : "TargetFunctionV1"
						}]
					}
				},
		"PermissionForEventsToInvokeAMIBackupLambda": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"FunctionName": { "Ref": "AMIBackupLambda" },
				"Action": "lambda:InvokeFunction",
				"Principal": "events.amazonaws.com",
				"SourceArn": { "Fn::GetAtt": ["ScheduledRuleAMIBackup", "Arn"] }
				}
			},
		"PermissionForEventsToInvokeAMIDeleteLambda": {
			"Type": "AWS::Lambda::Permission",
			"Properties": {
				"FunctionName": { "Ref": "AMIDeleteLambda" },
				"Action": "lambda:InvokeFunction",
				"Principal": "events.amazonaws.com",
				"SourceArn": { "Fn::GetAtt": ["ScheduledRuleAMIDelete", "Arn"] }
				}
			},
		"AMIBackupLambda"    : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
			    "FunctionName": "AmiBackupAutomationFunction",
                "Code" : {
                    "S3Bucket" : { "Ref": "Bucketname" },
					"S3Key": { "Fn::Join" : [ "/", [ {"Ref":"S3Path" }, "amibackup.zip"] ] }
                },
                "Description" : "This function is used to automate AMI backups in response to cloudwatch event rule",
                "Handler"     : "index.lambda_handler",
                "Role"        : {
                    "Fn::GetAtt" : [
                        "LambdaAMIBackupDeleteRole",
                        "Arn"
                    ]
                },
                "Runtime"     : "python3.8",
                "Timeout"     : "60",
				"Environment" : { "Variables" : { "BACKUP_TAG_KEY": "Backup", "CONFIG_DEV_APP": "f=24h:r=4d", "CONFIG_DEV_DB": "f=1h:r=4d",
								"CONFIG_INFRA": "f=24h:r=4d", "CONFIG_INT": "f=24h:r=4d", "CONFIG_QA_APP": "f=24h:r=4d", "CONFIG_QA_DB": "f=4h:r=4d", "ENV_TAG_KEY": "ENVIRONMENT",
								"MAIL_SENDER": "BASE_BACKUPS@oneshield.com", "OWNER_ID": { "Ref": "AWS::AccountId" }, "RECIPIENT_LIST": "backups@oneshield.com",
								"SOURCE_REGION": { "Ref" : "AWS::Region" }} }
				
				}
			},
		"AMIDeleteLambda"    : {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
			    "FunctionName": "AmiDeleteAutomationFunction",
                "Code" : {
                    "S3Bucket" : { "Ref": "Bucketname" },
					"S3Key": { "Fn::Join" : [ "/", [ {"Ref":"S3Path" }, "amidelete.zip"] ] }
                },
                "Description" : "This function is used to automate AMI deletion in response to cloudwatch event rule",
                "Handler"     : "index.lambda_handler",
                "Role"        : {
                    "Fn::GetAtt" : [
                        "LambdaAMIBackupDeleteRole",
                        "Arn"
                    ]
                },
                "Runtime"     : "python3.8",
                "Timeout"     : "60",
				"Environment" : { "Variables" : { "OWNER_ID": { "Ref": "AWS::AccountId" }, "SOURCE_REGION": { "Ref" : "AWS::Region" }} }
				}
			}
		}
	}