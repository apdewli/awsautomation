{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This is the CloudFormation script for deployment of a Transit Gateway (RCS-1463)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Transit Gateway Configuration"
                    },
                    "Parameters": [
                        "AmazonAsn",
                        "AutoAcceptSharedAttachments",
                        "DefaultRouteTableAssociation",
                        "DefaultRouteTablePropagation",
                        "DnsSupport",
                        "VpnEcmpSupport",
						"TransitGatewayName"
                    ]
                }
            ],
            "ParameterLabels": {
                "AmazonAsn": {
                    "default": "Amazon Side ASN"
                },
                "AutoAcceptSharedAttachments": {
                    "default": "Auto Accept Share Attachments"
                },
                "DefaultRouteTableAssociation": {
                    "default": "Auto Associate Route Table Association"
                },
                "DefaultRouteTablePropagation": {
                    "default": "Automatic Route Propagation"
                },
                "DnsSupport": {
                    "default": "DNS Support"
                },
                "VpnEcmpSupport": {
                    "default": "Equal Cost Multipath Protocol"
                },
				"TransitGatewayName": {
                    "default": ""
                }
            }
        }
    },
    "Parameters": {
        "AmazonAsn": {
            "Type": "String",
            "Description": "A private Autonomous System Number (ASN) for the Amazon side of a BGP session.",
            "Default": 65000,
            "MinLength": 5,
            "MaxLength": 10,
            "ConstraintDescription": "The range is 64512 to 65534 for 16-bit ASNs and 4200000000 to 4294967294 for 32-bit ASNs."
        },
        "AutoAcceptSharedAttachments": {
            "Type": "String",
            "Description": "Indicates whether cross-account attachment requests are automatically accepted.",
            "Default": "enable",
            "AllowedValues": [
                "enable",
                "disable"
            ]
        },
        "DefaultRouteTableAssociation": {
            "Type": "String",
            "Description": "Enable or disable automatic association with the default association route table.",
            "Default": "enable",
            "AllowedValues": [
                "enable",
                "disable"
            ]
        },
        "DefaultRouteTablePropagation": {
            "Type": "String",
            "Description": "Enable or disable automatic propagation of routes to the default propagation route table.",
            "Default": "enable",
            "AllowedValues": [
                "enable",
                "disable"
            ]
        },
        "DnsSupport": {
            "Type": "String",
            "Description": "Enable or disable DNS support.",
            "Default": "enable",
            "AllowedValues": [
                "enable",
                "disable"
            ]
        },
        "VpnEcmpSupport": {
            "Type": "String",
            "Description": "Enable or disable Equal Cost Multipath Protocol.",
            "Default": "disable",
            "AllowedValues": [
                "enable",
                "disable"
            ]
        },
		"TransitGatewayName": {
            "Type": "String",
            "Description": "Name for the Transit Gateway",
            "Default": ""
            }
    },
    "Resources": {
        "TransitGateway": {
            "Type": "AWS::EC2::TransitGateway",
            "Properties": {
                "AmazonSideAsn": {
                    "Ref": "AmazonAsn"
                },
                "AutoAcceptSharedAttachments": {
                    "Ref": "AutoAcceptSharedAttachments"
                },
                "DefaultRouteTableAssociation": {
                    "Ref": "DefaultRouteTableAssociation"
                },
                "DefaultRouteTablePropagation": {
                    "Ref": "DefaultRouteTablePropagation"
                },
                "Description": "Transit Gateway serves as a centralized outgoing gateway for networking traffic",
                "DnsSupport": {
                    "Ref": "DnsSupport"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {"Ref":"TransitGatewayName"}
                    }
                ],
                "VpnEcmpSupport": {
                    "Ref": "VpnEcmpSupport"
                }
            }
        },
		"LambdaExecutionRole": {
			"Type": "AWS::IAM::Role",
			"DependsOn":"TransitGateway",
			"Properties": {
			   "AssumeRolePolicyDocument": {
					"Statement": [{
					"Action": ["sts:AssumeRole"],
					"Effect": "Allow",
					"Principal": {
						"Service": ["lambda.amazonaws.com"]
					}
				}],
				"Version": "2012-10-17"
			   },
			"Path": "/",
			"Policies": [{
				"PolicyDocument": {
						"Statement": [
							{
					"Action": [
								   "logs:CreateLogGroup",
								   "logs:CreateLogStream",
								   "logs:PutLogEvents"
								],
					"Effect": "Allow",
					"Resource": "arn:aws:logs:*:*:*"
					},
							{
						"Action": [
							"lambda:CreateFunction",
							"lambda:DeleteFunction",
							"organizations:DescribeAccount",
							"organizations:ListAccounts",
							"sts:AssumeRole",
							"ram:GetResourceShareInvitations",
                            "ram:AcceptResourceShareInvitation",
							"ram:CreateResourceShare",
							"ram:TagResource"
							],
					"Effect": "Allow",
					"Resource": "*"
				}
						 ],
				 "Version": "2012-10-17"
			},
			"PolicyName": { "Fn::Join": ["-", [{ "Ref": "TransitGatewayName" }, "Lambda-Policy"]]}
			 }]
			}
		},
		"TransitGatewaySharingLambda": {
		  "Type": "AWS::Lambda::Function",
		  "Properties": {
			"Code": {
			  "ZipFile": "import boto3\nimport os\nimport json\nfrom botocore.vendored import requests\n\norg_client = boto3.client('organizations')\nram_client = boto3.client('ram')\n\ndef lambda_handler(event,context):\n    print(event)\n    response_data = {}\n    my_session = boto3.session.Session()\n    stackregion = my_session.region_name\n    transit_gateway_arn = os.environ['transit_gateway_arn']\n    \n    \n    \n    try:\n        share_transit_gateway(transit_gateway_arn)\n        responseStatus = \"SUCCESS\"\n        responde_to_cloudformation(event, context, responseStatus, response_data)\n        \n    except Exception as e:\n        responseStatus = \"FAILED\"\n        print(\"Error in sharing the transit Gateway! Error: \"+str(e))\n        \ndef share_transit_gateway(transit_gateway_arn):\n    org_client = boto3.client('organizations')\n    paginator = org_client.get_paginator('list_accounts')\n    page_iterator = paginator.paginate()\n    for page in page_iterator:\n        for account in page['Accounts']:\n            print(account['Id'])\n            response = ram_client.create_resource_share(\n                name='MasterAccountTransitGateway',\n                resourceArns=[\n                transit_gateway_arn\n                ],\n                principals=[\n                    account['Id']\n                    ],\n                tags=[\n                    {\n                         'key': 'Name',\n                        'value': 'MasterAccountTransitGateway'\n                    },\n                    ],\n                allowExternalPrincipals=True\n                )\n                \ndef responde_to_cloudformation(event, context, responseStatus, response_data):\n    responseUrl = event['ResponseURL']\n    responseBody = {}\n    responseBody['Status'] = responseStatus\n    responseBody['PhysicalResourceId'] = event['ServiceToken']\n    responseBody['Reason'] = 'See the details in CloudWatch Log Stream: ' + context.log_stream_name\n    responseBody['StackId'] = event['StackId']\n    responseBody['RequestId'] = event['RequestId']\n    responseBody['LogicalResourceId'] = event['LogicalResourceId']\n    responseBody['Data'] = response_data\n\n    json_responseBody = json.dumps(responseBody)\n\n    print(\"Response body:\" + json_responseBody)\n\n    headers = {\n        'content-type': '',\n        'content-length': str(len(json_responseBody))\n    }\n\n    try:\n        response = requests.put(responseUrl,\n                                data=json_responseBody,\n                                headers=headers)\n        print(\"Status code: \" + response.reason)\n    except Exception as e:\n        print(\"send(..) failed executing requests.put(..): \" + str(e))\n\n"
			},
			"Environment": {
			  "Variables": {
				"transit_gateway_arn": {"Fn::Join" : ["", [ "arn:aws:ec2:", {"Ref":"AWS::Region"}, ":", {"Ref":"AWS::AccountId"}, ":transit-gateway/", {"Ref": "TransitGateway"}]]}
				}
			 },
			"Handler": "index.lambda_handler",
			"Role": { "Fn::GetAtt" : ["LambdaExecutionRole", "Arn"] },
			"Runtime": "python3.7",
			"Timeout": 300
		  }
		},
		"TriggerLambda": {
		  "Type": "Custom::TriggerLambda",
		  "DeletionPolicy": "Retain",
		  "DependsOn": [
			"TransitGatewaySharingLambda"
		  ],
		  "Properties": {
			"ServiceToken": { "Fn::GetAtt" : ["TransitGatewaySharingLambda", "Arn"] }
		  }
		}
    },
    "Outputs": {
        "TransitGatewayId": {
            "Description": "The Transit Gateway ID",
            "Value": {"Ref": "TransitGateway"},
			"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-TransitGatewayId"
				}
			}
        },
		"TransitGatewayArn": {
            "Description": "The Transit Gateway Arn",
			"Value": {"Fn::Join" : ["", [ "arn:aws:ec2:", {"Ref":"AWS::Region"}, ":", {"Ref":"AWS::AccountId"}, ":transit-gateway/", {"Ref": "TransitGateway"}]]},
        	"Export": {
				"Name": {
					"Fn::Sub": "${AWS::StackName}-TransitGatewayArn"
				}
			}
		}
    }
}